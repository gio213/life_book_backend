  const query = `
SELECT
    posts.*,
    users.username as author,
    users.profile_picture as profilePicture,
    JSON_ARRAYAGG(JSON_OBJECT('username', comment_users.username, 'content', comments.content, 'profilePicture', comment_users.profile_picture)) as commentedByUsers,
    (SELECT JSON_ARRAYAGG(liked_user.username) FROM (
        SELECT DISTINCT liked_users.username
        FROM likes
        JOIN users AS liked_users ON liked_users.user_id = likes.user_id
        WHERE likes.post_id = posts.post_id
    ) as liked_user) as likedByUsers,
    (CASE WHEN EXISTS (SELECT 1 FROM likes WHERE likes.post_id = posts.post_id AND likes.user_id = ${id}) THEN 'true' ELSE 'false' END) as currentUserLiked
FROM
    posts
    JOIN users ON users.user_id = posts.user_id
    LEFT JOIN comments ON comments.post_id = posts.post_id
    LEFT JOIN users AS comment_users ON comment_users.user_id = comments.user_id
WHERE
    posts.user_id = ${id} -- User's own posts
GROUP BY
    posts.post_id, author, profilePicture
UNION
SELECT
    posts.*,
    users.username as author,
    users.profile_picture as profilePicture,
    JSON_ARRAYAGG(JSON_OBJECT('username', comment_users.username, 'content', comments.content, 'profilePicture', comment_users.profile_picture)) as commentedByUsers,
    (SELECT JSON_ARRAYAGG(liked_user.username) FROM (
        SELECT DISTINCT liked_users.username
        FROM likes
        JOIN users AS liked_users ON liked_users.user_id = likes.user_id
        WHERE likes.post_id = posts.post_id
    ) as liked_user) as likedByUsers,
    (CASE WHEN EXISTS (SELECT 1 FROM likes WHERE likes.post_id = posts.post_id AND likes.user_id = ${id}) THEN 'true' ELSE 'false' END) as currentUserLiked
FROM
    posts
    JOIN followers ON followers.followee_id = posts.user_id
    JOIN users ON users.user_id = posts.user_id
    LEFT JOIN comments ON comments.post_id = posts.post_id
    LEFT JOIN users AS comment_users ON comment_users.user_id = comments.user_id
WHERE
    (followers.follower_id = ${id} AND followers.accepted = 1) -- Posts by those followed
GROUP BY
    posts.post_id, author, profilePicture
UNION
SELECT
    posts.*,
    users.username as author,
    users.profile_picture as profilePicture,
    JSON_ARRAYAGG(JSON_OBJECT('username', comment_users.username, 'content', comments.content, 'profilePicture', comment_users.profile_picture)) as commentedByUsers,
    (SELECT JSON_ARRAYAGG(liked_user.username) FROM (
        SELECT DISTINCT liked_users.username
        FROM likes
        JOIN users AS liked_users ON liked_users.user_id = likes.user_id
        WHERE likes.post_id = posts.post_id
    ) as liked_user) as likedByUsers,
    (CASE WHEN EXISTS (SELECT 1 FROM likes WHERE likes.post_id = posts.post_id AND likes.user_id = ${id}) THEN 'true' ELSE 'false' END) as currentUserLiked
FROM
    posts
    JOIN followers on followers.follower_id = posts.user_id
    JOIN users ON users.user_id = posts.user_id
    LEFT JOIN comments ON comments.post_id = posts.post_id
    LEFT JOIN users AS comment_users ON comment_users.user_id = comments.user_id
WHERE
    (followers.followee_id = ${id} AND followers.accepted = 1) -- Posts by those who follow the user
GROUP BY
    posts.post_id, author, profilePicture
ORDER BY created_at DESC;
`;